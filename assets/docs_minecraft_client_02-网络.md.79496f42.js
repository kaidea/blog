import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.82dd189e.js";const C=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/minecraft/client/02-网络.md","filePath":"docs/minecraft/client/02-网络.md"}'),p={name:"docs/minecraft/client/02-网络.md"},o=l(`<h3 id="netty-网络" tabindex="-1">netty 网络 <a class="header-anchor" href="#netty-网络" aria-label="Permalink to &quot;netty 网络&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Minecraft</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">doLoadLevel</span><span style="color:#E1E4E8;">(String </span><span style="color:#FFAB70;">p_91220_</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">     RegistryAccess.RegistryHolder </span><span style="color:#FFAB70;">p_91221_</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">     Function&lt;</span><span style="color:#F97583;">LevelStorageSource</span><span style="color:#E1E4E8;">.</span><span style="color:#F97583;">LevelStorageAccess</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">DataPackConfig</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">p_91222_</span><span style="color:#E1E4E8;">, Function4&lt;</span><span style="color:#F97583;">LevelStorageSource</span><span style="color:#E1E4E8;">.</span><span style="color:#F97583;">LevelStorageAccess</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">RegistryAccess</span><span style="color:#E1E4E8;">.</span><span style="color:#F97583;">RegistryHolder</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">ResourceManager</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">DataPackConfig</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">WorldData</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">p_91223_</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">p_91224_</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">     Minecraft.ExperimentalDialogType </span><span style="color:#FFAB70;">p_91225_</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">creating</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">//判断加载</span></span>
<span class="line"><span style="color:#E1E4E8;">      LevelStorageSource.LevelStorageAccess levelstoragesource$levelstorageaccess;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">         levelstoragesource$levelstorageaccess </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.levelSource.</span><span style="color:#B392F0;">createAccess</span><span style="color:#E1E4E8;">(p_91220_);</span></span>
<span class="line"><span style="color:#E1E4E8;">      } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (IOException </span><span style="color:#FFAB70;">ioexception2</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">         LOGGER.</span><span style="color:#B392F0;">warn</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Failed to read level {} data&quot;</span><span style="color:#E1E4E8;">, p_91220_, ioexception2);</span></span>
<span class="line"><span style="color:#E1E4E8;">         SystemToast.</span><span style="color:#B392F0;">onWorldAccessFailure</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">, p_91220_);</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">setScreen</span><span style="color:#E1E4E8;">((Screen)</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">      Minecraft.ServerStem minecraft$serverstem;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> RegistryAccess.RegistryHolder registryHolder;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">creating) levelstoragesource$levelstorageaccess.</span><span style="color:#B392F0;">readAdditionalLevelSaveData</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">          registryHolder </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> creating </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> p_91221_ </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> RegistryAccess.</span><span style="color:#B392F0;">builtin</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">          minecraft$serverstem </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">makeServerStem</span><span style="color:#E1E4E8;">(registryHolder, p_91222_, p_91223_, p_91224_, levelstoragesource$levelstorageaccess);</span></span>
<span class="line"><span style="color:#E1E4E8;">      } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (Exception </span><span style="color:#FFAB70;">exception</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">         LOGGER.</span><span style="color:#B392F0;">warn</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Failed to load datapacks, can&#39;t proceed with server load&quot;</span><span style="color:#E1E4E8;">, (Throwable)exception);</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">setScreen</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DatapackLoadFailureScreen</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">doLoadLevel</span><span style="color:#E1E4E8;">(p_91220_, p_91221_, p_91222_, p_91223_, </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, p_91225_, creating);</span></span>
<span class="line"><span style="color:#E1E4E8;">         }));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            levelstoragesource$levelstorageaccess.</span><span style="color:#B392F0;">close</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">         } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (IOException </span><span style="color:#FFAB70;">ioexception</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            LOGGER.</span><span style="color:#B392F0;">warn</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Failed to unlock access to level {}&quot;</span><span style="color:#E1E4E8;">, p_91220_, ioexception);</span></span>
<span class="line"><span style="color:#E1E4E8;">         }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">      WorldData worlddata </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> minecraft$serverstem.</span><span style="color:#B392F0;">worldData</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> flag </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> worlddata.</span><span style="color:#B392F0;">worldGenSettings</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">isOldCustomizedWorld</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> flag1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> worlddata.</span><span style="color:#B392F0;">worldGenSettingsLifecycle</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> Lifecycle.</span><span style="color:#B392F0;">stable</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (p_91225_ </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> Minecraft.ExperimentalDialogType.NONE </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">flag </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">flag1) {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">clearLevel</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.progressListener.</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">((StoringChunkProgressListener)</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            levelstoragesource$levelstorageaccess.</span><span style="color:#B392F0;">saveDataTag</span><span style="color:#E1E4E8;">(registryHolder, worlddata);</span></span>
<span class="line"><span style="color:#E1E4E8;">            minecraft$serverstem.</span><span style="color:#B392F0;">serverResources</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">updateGlobals</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">            YggdrasilAuthenticationService yggdrasilauthenticationservice </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">YggdrasilAuthenticationService</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.proxy);</span></span>
<span class="line"><span style="color:#E1E4E8;">            MinecraftSessionService minecraftsessionservice </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> yggdrasilauthenticationservice.</span><span style="color:#B392F0;">createMinecraftSessionService</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">            GameProfileRepository gameprofilerepository </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> yggdrasilauthenticationservice.</span><span style="color:#B392F0;">createProfileRepository</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">            GameProfileCache gameprofilecache </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">GameProfileCache</span><span style="color:#E1E4E8;">(gameprofilerepository, </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">File</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.gameDirectory, MinecraftServer.USERID_CACHE_FILE.</span><span style="color:#B392F0;">getName</span><span style="color:#E1E4E8;">()));</span></span>
<span class="line"><span style="color:#E1E4E8;">            gameprofilecache.</span><span style="color:#B392F0;">setExecutor</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            SkullBlockEntity.</span><span style="color:#B392F0;">setup</span><span style="color:#E1E4E8;">(gameprofilecache, minecraftsessionservice, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            GameProfileCache.</span><span style="color:#B392F0;">setUsesAuthentication</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.singleplayerServer </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> MinecraftServer.</span><span style="color:#B392F0;">spin</span><span style="color:#E1E4E8;">((p_167898_) </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">               </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">IntegratedServer</span><span style="color:#E1E4E8;">(p_167898_, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">, registryHolder, levelstoragesource$levelstorageaccess, minecraft$serverstem.</span><span style="color:#B392F0;">packRepository</span><span style="color:#E1E4E8;">(), minecraft$serverstem.</span><span style="color:#B392F0;">serverResources</span><span style="color:#E1E4E8;">(), worlddata, minecraftsessionservice, gameprofilerepository, gameprofilecache, (p_168000_) </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">                  StoringChunkProgressListener storingchunkprogresslistener </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">StoringChunkProgressListener</span><span style="color:#E1E4E8;">(p_168000_ </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                  </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.progressListener.</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(storingchunkprogresslistener);</span></span>
<span class="line"><span style="color:#E1E4E8;">                  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> ProcessorChunkProgressListener.</span><span style="color:#B392F0;">createStarted</span><span style="color:#E1E4E8;">(storingchunkprogresslistener, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.progressTasks</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">add);</span></span>
<span class="line"><span style="color:#E1E4E8;">               });</span></span>
<span class="line"><span style="color:#E1E4E8;">            });</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.isLocalServer </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">         } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (Throwable </span><span style="color:#FFAB70;">throwable</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            CrashReport crashreport </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> CrashReport.</span><span style="color:#B392F0;">forThrowable</span><span style="color:#E1E4E8;">(throwable, </span><span style="color:#9ECBFF;">&quot;Starting integrated server&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            CrashReportCategory crashreportcategory </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> crashreport.</span><span style="color:#B392F0;">addCategory</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Starting integrated server&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            crashreportcategory.</span><span style="color:#B392F0;">setDetail</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Level ID&quot;</span><span style="color:#E1E4E8;">, p_91220_);</span></span>
<span class="line"><span style="color:#E1E4E8;">            crashreportcategory.</span><span style="color:#B392F0;">setDetail</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Level Name&quot;</span><span style="color:#E1E4E8;">, worlddata.</span><span style="color:#B392F0;">getLevelName</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ReportedException</span><span style="color:#E1E4E8;">(crashreport);</span></span>
<span class="line"><span style="color:#E1E4E8;">         }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.progressListener.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            Thread.</span><span style="color:#B392F0;">yield</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">         }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">         LevelLoadingScreen levelloadingscreen </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">LevelLoadingScreen</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.progressListener.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">setScreen</span><span style="color:#E1E4E8;">(levelloadingscreen);</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.profiler.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;waitForServer&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">!</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.singleplayerServer.</span><span style="color:#B392F0;">isReady</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            levelloadingscreen.</span><span style="color:#B392F0;">tick</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">runTick</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">               Thread.</span><span style="color:#B392F0;">sleep</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">16L</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (InterruptedException </span><span style="color:#FFAB70;">interruptedexception</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.delayedCrash </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">               </span><span style="color:#B392F0;">crash</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.delayedCrash.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">               </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">         }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.profiler.</span><span style="color:#B392F0;">pop</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">         SocketAddress socketaddress </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.singleplayerServer.</span><span style="color:#B392F0;">getConnection</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">startMemoryChannel</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">         Connection connection </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Connection.</span><span style="color:#B392F0;">connectToLocalServer</span><span style="color:#E1E4E8;">(socketaddress);</span></span>
<span class="line"><span style="color:#E1E4E8;">         connection.</span><span style="color:#B392F0;">setListener</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ClientHandshakePacketListenerImpl</span><span style="color:#E1E4E8;">(connection, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">, (Screen)</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">, (p_167998_) </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">         }));</span></span>
<span class="line"><span style="color:#E1E4E8;">         connection.</span><span style="color:#B392F0;">send</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ClientIntentionPacket</span><span style="color:#E1E4E8;">(socketaddress.</span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">(), </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, ConnectionProtocol.LOGIN));</span></span>
<span class="line"><span style="color:#E1E4E8;">         com.mojang.authlib.GameProfile gameProfile </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">getUser</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">getGameProfile</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">getUser</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">hasCachedProperties</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            gameProfile </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> minecraftSessionService.</span><span style="color:#B392F0;">fillProfileProperties</span><span style="color:#E1E4E8;">(gameProfile, </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">//Forge: Fill profile properties upon game load. Fixes MC-52974.</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">getUser</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">setProperties</span><span style="color:#E1E4E8;">(gameProfile.</span><span style="color:#B392F0;">getProperties</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">         }</span></span>
<span class="line"><span style="color:#E1E4E8;">         connection.</span><span style="color:#B392F0;">send</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ServerboundHelloPacket</span><span style="color:#E1E4E8;">(gameProfile));</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.pendingConnection </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> connection;</span></span>
<span class="line"><span style="color:#E1E4E8;">      } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">displayExperimentalConfirmationDialog</span><span style="color:#E1E4E8;">(p_91225_, p_91220_, flag, () </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">doLoadLevel</span><span style="color:#E1E4E8;">(p_91220_, registryHolder, p_91222_, p_91223_, p_91224_, Minecraft.ExperimentalDialogType.NONE, creating);</span></span>
<span class="line"><span style="color:#E1E4E8;">         });</span></span>
<span class="line"><span style="color:#E1E4E8;">         minecraft$serverstem.</span><span style="color:#B392F0;">close</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            levelstoragesource$levelstorageaccess.</span><span style="color:#B392F0;">close</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">         } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (IOException </span><span style="color:#FFAB70;">ioexception1</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            LOGGER.</span><span style="color:#B392F0;">warn</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Failed to unlock access to level {}&quot;</span><span style="color:#E1E4E8;">, p_91220_, ioexception1);</span></span>
<span class="line"><span style="color:#E1E4E8;">         }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Minecraft</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">doLoadLevel</span><span style="color:#24292E;">(String </span><span style="color:#E36209;">p_91220_</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">     RegistryAccess.RegistryHolder </span><span style="color:#E36209;">p_91221_</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">     Function&lt;</span><span style="color:#D73A49;">LevelStorageSource</span><span style="color:#24292E;">.</span><span style="color:#D73A49;">LevelStorageAccess</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">DataPackConfig</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">p_91222_</span><span style="color:#24292E;">, Function4&lt;</span><span style="color:#D73A49;">LevelStorageSource</span><span style="color:#24292E;">.</span><span style="color:#D73A49;">LevelStorageAccess</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">RegistryAccess</span><span style="color:#24292E;">.</span><span style="color:#D73A49;">RegistryHolder</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">ResourceManager</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">DataPackConfig</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">WorldData</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">p_91223_</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> </span><span style="color:#E36209;">p_91224_</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">     Minecraft.ExperimentalDialogType </span><span style="color:#E36209;">p_91225_</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> </span><span style="color:#E36209;">creating</span><span style="color:#24292E;">) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">//判断加载</span></span>
<span class="line"><span style="color:#24292E;">      LevelStorageSource.LevelStorageAccess levelstoragesource$levelstorageaccess;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">         levelstoragesource$levelstorageaccess </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.levelSource.</span><span style="color:#6F42C1;">createAccess</span><span style="color:#24292E;">(p_91220_);</span></span>
<span class="line"><span style="color:#24292E;">      } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (IOException </span><span style="color:#E36209;">ioexception2</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">         LOGGER.</span><span style="color:#6F42C1;">warn</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Failed to read level {} data&quot;</span><span style="color:#24292E;">, p_91220_, ioexception2);</span></span>
<span class="line"><span style="color:#24292E;">         SystemToast.</span><span style="color:#6F42C1;">onWorldAccessFailure</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">, p_91220_);</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">setScreen</span><span style="color:#24292E;">((Screen)</span><span style="color:#005CC5;">null</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">      Minecraft.ServerStem minecraft$serverstem;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> RegistryAccess.RegistryHolder registryHolder;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">creating) levelstoragesource$levelstorageaccess.</span><span style="color:#6F42C1;">readAdditionalLevelSaveData</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">          registryHolder </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> creating </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> p_91221_ </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> RegistryAccess.</span><span style="color:#6F42C1;">builtin</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">          minecraft$serverstem </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">makeServerStem</span><span style="color:#24292E;">(registryHolder, p_91222_, p_91223_, p_91224_, levelstoragesource$levelstorageaccess);</span></span>
<span class="line"><span style="color:#24292E;">      } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (Exception </span><span style="color:#E36209;">exception</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">         LOGGER.</span><span style="color:#6F42C1;">warn</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Failed to load datapacks, can&#39;t proceed with server load&quot;</span><span style="color:#24292E;">, (Throwable)exception);</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">setScreen</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">DatapackLoadFailureScreen</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">doLoadLevel</span><span style="color:#24292E;">(p_91220_, p_91221_, p_91222_, p_91223_, </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, p_91225_, creating);</span></span>
<span class="line"><span style="color:#24292E;">         }));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            levelstoragesource$levelstorageaccess.</span><span style="color:#6F42C1;">close</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">         } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (IOException </span><span style="color:#E36209;">ioexception</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            LOGGER.</span><span style="color:#6F42C1;">warn</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Failed to unlock access to level {}&quot;</span><span style="color:#24292E;">, p_91220_, ioexception);</span></span>
<span class="line"><span style="color:#24292E;">         }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">      WorldData worlddata </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> minecraft$serverstem.</span><span style="color:#6F42C1;">worldData</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> flag </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> worlddata.</span><span style="color:#6F42C1;">worldGenSettings</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">isOldCustomizedWorld</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> flag1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> worlddata.</span><span style="color:#6F42C1;">worldGenSettingsLifecycle</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> Lifecycle.</span><span style="color:#6F42C1;">stable</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (p_91225_ </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> Minecraft.ExperimentalDialogType.NONE </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!</span><span style="color:#24292E;">flag </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!</span><span style="color:#24292E;">flag1) {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">clearLevel</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.progressListener.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">((StoringChunkProgressListener)</span><span style="color:#005CC5;">null</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            levelstoragesource$levelstorageaccess.</span><span style="color:#6F42C1;">saveDataTag</span><span style="color:#24292E;">(registryHolder, worlddata);</span></span>
<span class="line"><span style="color:#24292E;">            minecraft$serverstem.</span><span style="color:#6F42C1;">serverResources</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">updateGlobals</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">            YggdrasilAuthenticationService yggdrasilauthenticationservice </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">YggdrasilAuthenticationService</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.proxy);</span></span>
<span class="line"><span style="color:#24292E;">            MinecraftSessionService minecraftsessionservice </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> yggdrasilauthenticationservice.</span><span style="color:#6F42C1;">createMinecraftSessionService</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">            GameProfileRepository gameprofilerepository </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> yggdrasilauthenticationservice.</span><span style="color:#6F42C1;">createProfileRepository</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">            GameProfileCache gameprofilecache </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">GameProfileCache</span><span style="color:#24292E;">(gameprofilerepository, </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">File</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.gameDirectory, MinecraftServer.USERID_CACHE_FILE.</span><span style="color:#6F42C1;">getName</span><span style="color:#24292E;">()));</span></span>
<span class="line"><span style="color:#24292E;">            gameprofilecache.</span><span style="color:#6F42C1;">setExecutor</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            SkullBlockEntity.</span><span style="color:#6F42C1;">setup</span><span style="color:#24292E;">(gameprofilecache, minecraftsessionservice, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            GameProfileCache.</span><span style="color:#6F42C1;">setUsesAuthentication</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">false</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.singleplayerServer </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> MinecraftServer.</span><span style="color:#6F42C1;">spin</span><span style="color:#24292E;">((p_167898_) </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">               </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">IntegratedServer</span><span style="color:#24292E;">(p_167898_, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">, registryHolder, levelstoragesource$levelstorageaccess, minecraft$serverstem.</span><span style="color:#6F42C1;">packRepository</span><span style="color:#24292E;">(), minecraft$serverstem.</span><span style="color:#6F42C1;">serverResources</span><span style="color:#24292E;">(), worlddata, minecraftsessionservice, gameprofilerepository, gameprofilecache, (p_168000_) </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                  StoringChunkProgressListener storingchunkprogresslistener </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">StoringChunkProgressListener</span><span style="color:#24292E;">(p_168000_ </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.progressListener.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(storingchunkprogresslistener);</span></span>
<span class="line"><span style="color:#24292E;">                  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> ProcessorChunkProgressListener.</span><span style="color:#6F42C1;">createStarted</span><span style="color:#24292E;">(storingchunkprogresslistener, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.progressTasks</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">add);</span></span>
<span class="line"><span style="color:#24292E;">               });</span></span>
<span class="line"><span style="color:#24292E;">            });</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.isLocalServer </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">         } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (Throwable </span><span style="color:#E36209;">throwable</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            CrashReport crashreport </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> CrashReport.</span><span style="color:#6F42C1;">forThrowable</span><span style="color:#24292E;">(throwable, </span><span style="color:#032F62;">&quot;Starting integrated server&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            CrashReportCategory crashreportcategory </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> crashreport.</span><span style="color:#6F42C1;">addCategory</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Starting integrated server&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            crashreportcategory.</span><span style="color:#6F42C1;">setDetail</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Level ID&quot;</span><span style="color:#24292E;">, p_91220_);</span></span>
<span class="line"><span style="color:#24292E;">            crashreportcategory.</span><span style="color:#6F42C1;">setDetail</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Level Name&quot;</span><span style="color:#24292E;">, worlddata.</span><span style="color:#6F42C1;">getLevelName</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ReportedException</span><span style="color:#24292E;">(crashreport);</span></span>
<span class="line"><span style="color:#24292E;">         }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">while</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.progressListener.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            Thread.</span><span style="color:#6F42C1;">yield</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">         }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">         LevelLoadingScreen levelloadingscreen </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">LevelLoadingScreen</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.progressListener.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">setScreen</span><span style="color:#24292E;">(levelloadingscreen);</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.profiler.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;waitForServer&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">while</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">!</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.singleplayerServer.</span><span style="color:#6F42C1;">isReady</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">            levelloadingscreen.</span><span style="color:#6F42C1;">tick</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">runTick</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">false</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">               Thread.</span><span style="color:#6F42C1;">sleep</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">16L</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (InterruptedException </span><span style="color:#E36209;">interruptedexception</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.delayedCrash </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">               </span><span style="color:#6F42C1;">crash</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.delayedCrash.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">               </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">         }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.profiler.</span><span style="color:#6F42C1;">pop</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">         SocketAddress socketaddress </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.singleplayerServer.</span><span style="color:#6F42C1;">getConnection</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">startMemoryChannel</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">         Connection connection </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Connection.</span><span style="color:#6F42C1;">connectToLocalServer</span><span style="color:#24292E;">(socketaddress);</span></span>
<span class="line"><span style="color:#24292E;">         connection.</span><span style="color:#6F42C1;">setListener</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ClientHandshakePacketListenerImpl</span><span style="color:#24292E;">(connection, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">, (Screen)</span><span style="color:#005CC5;">null</span><span style="color:#24292E;">, (p_167998_) </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">         }));</span></span>
<span class="line"><span style="color:#24292E;">         connection.</span><span style="color:#6F42C1;">send</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ClientIntentionPacket</span><span style="color:#24292E;">(socketaddress.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">(), </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, ConnectionProtocol.LOGIN));</span></span>
<span class="line"><span style="color:#24292E;">         com.mojang.authlib.GameProfile gameProfile </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">getUser</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">getGameProfile</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">getUser</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">hasCachedProperties</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">            gameProfile </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> minecraftSessionService.</span><span style="color:#6F42C1;">fillProfileProperties</span><span style="color:#24292E;">(gameProfile, </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">//Forge: Fill profile properties upon game load. Fixes MC-52974.</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">getUser</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">setProperties</span><span style="color:#24292E;">(gameProfile.</span><span style="color:#6F42C1;">getProperties</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">         }</span></span>
<span class="line"><span style="color:#24292E;">         connection.</span><span style="color:#6F42C1;">send</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ServerboundHelloPacket</span><span style="color:#24292E;">(gameProfile));</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.pendingConnection </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> connection;</span></span>
<span class="line"><span style="color:#24292E;">      } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">displayExperimentalConfirmationDialog</span><span style="color:#24292E;">(p_91225_, p_91220_, flag, () </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">doLoadLevel</span><span style="color:#24292E;">(p_91220_, registryHolder, p_91222_, p_91223_, p_91224_, Minecraft.ExperimentalDialogType.NONE, creating);</span></span>
<span class="line"><span style="color:#24292E;">         });</span></span>
<span class="line"><span style="color:#24292E;">         minecraft$serverstem.</span><span style="color:#6F42C1;">close</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            levelstoragesource$levelstorageaccess.</span><span style="color:#6F42C1;">close</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">         } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (IOException </span><span style="color:#E36209;">ioexception1</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            LOGGER.</span><span style="color:#6F42C1;">warn</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Failed to unlock access to level {}&quot;</span><span style="color:#24292E;">, p_91220_, ioexception1);</span></span>
<span class="line"><span style="color:#24292E;">         }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,2),e=[o];function r(t,c,E,y,i,F){return n(),a("div",null,e)}const d=s(p,[["render",r]]);export{C as __pageData,d as default};
