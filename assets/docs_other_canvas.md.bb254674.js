import{_ as t,o as d,c as a,Q as e}from"./chunks/framework.82dd189e.js";const f=JSON.parse('{"title":"Canvas","description":"","frontmatter":{},"headers":[],"relativePath":"docs/other/canvas.md","filePath":"docs/other/canvas.md"}'),r={name:"docs/other/canvas.md"},o=e('<h1 id="canvas" tabindex="-1">Canvas <a class="header-anchor" href="#canvas" aria-label="Permalink to &quot;Canvas&quot;">​</a></h1><p>id:作为唯一标识</p><p>width:画布内容宽度的像素大小(与style的宽度和高度是有区别)</p><p>height: 画布内容高度的像素大小</p><p>注意:canvas 仅仅只是一个画布标签,要绘制内容,必须要用js绘制</p><h3 id="颜色、-样式和阴影" tabindex="-1">颜色、 样式和阴影 <a class="header-anchor" href="#颜色、-样式和阴影" aria-label="Permalink to &quot;颜色、 样式和阴影&quot;">​</a></h3><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>fillStyle</td><td>设置或返回用于填充绘画的颜色,渐变或模式</td></tr><tr><td>strokeStyle</td><td>设置或返回用于笔触的颜色，渐变或模式</td></tr><tr><td>shadowColor</td><td>设置或返回用于阴影的颜色</td></tr><tr><td>shadowBlur</td><td>设置或返回用于阴影的模糊级别</td></tr><tr><td>shadowOffsetX</td><td>设置或返回阴影与形状的水平距离</td></tr><tr><td>shadowOffertY</td><td>设置或返回阴影与形状的垂直距离</td></tr></tbody></table><h3 id="线条样式" tabindex="-1">线条样式 <a class="header-anchor" href="#线条样式" aria-label="Permalink to &quot;线条样式&quot;">​</a></h3><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>lineCap</td><td>设置或返回线条的结束端点样式</td></tr><tr><td>lineJoin</td><td>设置或返回两条线相交时, 所创建的拐角类型</td></tr><tr><td>lineWidth</td><td>设置或返回当前的线条宽度</td></tr><tr><td>miterLimit</td><td>设置或返回最大斜接长度</td></tr></tbody></table><h3 id="矩形" tabindex="-1">矩形 <a class="header-anchor" href="#矩形" aria-label="Permalink to &quot;矩形&quot;">​</a></h3><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>react</td><td>创建矩形</td></tr><tr><td>fillRect</td><td>绘制被填充的矩形</td></tr><tr><td>strkeRect</td><td>绘制矩形 （无填充）</td></tr><tr><td>clearRect</td><td>在给定的矩形内清除指定的像素</td></tr></tbody></table>',11),h=[o];function s(l,n,c,i,_,b){return d(),a("div",null,h)}const m=t(r,[["render",s]]);export{f as __pageData,m as default};
