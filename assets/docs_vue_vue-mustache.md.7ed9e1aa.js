import{_ as s,o as a,c as n,Q as p}from"./chunks/framework.82dd189e.js";const C=JSON.parse('{"title":"mustache","description":"","frontmatter":{},"headers":[],"relativePath":"docs/vue/vue-mustache.md","filePath":"docs/vue/vue-mustache.md"}'),l={name:"docs/vue/vue-mustache.md"},o=p(`<h1 id="mustache" tabindex="-1">mustache <a class="header-anchor" href="#mustache" aria-label="Permalink to &quot;mustache&quot;">​</a></h1><h2 id="将字符串转换为tokens" tabindex="-1">将字符串转换为tokens <a class="header-anchor" href="#将字符串转换为tokens" aria-label="Permalink to &quot;将字符串转换为tokens&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> parseTemplateToTokens </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./parseTemplateToTokens&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">window.SSG_TemplateEngine</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">render</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">templateStr</span><span style="color:#E1E4E8;">,</span><span style="color:#FFAB70;">data</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> tokens</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">parseTemplateToTokens</span><span style="color:#E1E4E8;">(templateStr)</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> parseTemplateToTokens </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./parseTemplateToTokens&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">window.SSG_TemplateEngine</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">render</span><span style="color:#24292E;">(</span><span style="color:#E36209;">templateStr</span><span style="color:#24292E;">,</span><span style="color:#E36209;">data</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> tokens</span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;">parseTemplateToTokens</span><span style="color:#24292E;">(templateStr)</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="扫描器扫描字符串-scanner" tabindex="-1">扫描器扫描字符串 (Scanner) <a class="header-anchor" href="#扫描器扫描字符串-scanner" aria-label="Permalink to &quot;扫描器扫描字符串  (Scanner)&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Scanner</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">constructor</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">templateStr</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.templateStr</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">templateStr</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.pos</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.tail</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">templateStr </span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//功能弱,就是走过指定内容</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">scan</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">tag</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.tail.</span><span style="color:#B392F0;">indexOf</span><span style="color:#E1E4E8;">(tag)</span><span style="color:#F97583;">===</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">//tag有多长,比如{{长度是2,就让指针后移多少位</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.pos</span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;">tag.</span><span style="color:#79B8FF;">length</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.tail</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.templateStr.</span><span style="color:#B392F0;">substring</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.pos)</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//让指针进行扫描,直到遇见指定内容结束,并且能够返回结束之前路过的文字</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">scanUtil</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">stopTag</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//记录一下执行本方法的时候pos的值</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">pos_backup</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.pos</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.tail.</span><span style="color:#B392F0;">indexOf</span><span style="color:#E1E4E8;">(stopTag)</span><span style="color:#F97583;">!==</span><span style="color:#79B8FF;">0</span><span style="color:#F97583;">&amp;&amp;!</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">eos</span><span style="color:#E1E4E8;">()){</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.pos</span><span style="color:#F97583;">++</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">//改变为尾巴开头不是stopTag的时候,就说明还没有扫描到stopTag</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.tail</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.templateStr.</span><span style="color:#B392F0;">substring</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.pos)</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// debugger</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.templateStr.</span><span style="color:#B392F0;">substring</span><span style="color:#E1E4E8;">(pos_backup,</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.pos)</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//指针是否已经到头,返回布尔值</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">eos</span><span style="color:#E1E4E8;">(){</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.pos</span><span style="color:#F97583;">&gt;=</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.templateStr.</span><span style="color:#79B8FF;">length</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Scanner</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">constructor</span><span style="color:#24292E;">(</span><span style="color:#E36209;">templateStr</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.templateStr</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">templateStr</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.pos</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.tail</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">templateStr </span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//功能弱,就是走过指定内容</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">scan</span><span style="color:#24292E;">(</span><span style="color:#E36209;">tag</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.tail.</span><span style="color:#6F42C1;">indexOf</span><span style="color:#24292E;">(tag)</span><span style="color:#D73A49;">===</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">//tag有多长,比如{{长度是2,就让指针后移多少位</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.pos</span><span style="color:#D73A49;">+=</span><span style="color:#24292E;">tag.</span><span style="color:#005CC5;">length</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.tail</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.templateStr.</span><span style="color:#6F42C1;">substring</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.pos)</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//让指针进行扫描,直到遇见指定内容结束,并且能够返回结束之前路过的文字</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">scanUtil</span><span style="color:#24292E;">(</span><span style="color:#E36209;">stopTag</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//记录一下执行本方法的时候pos的值</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">pos_backup</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.pos</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">while</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.tail.</span><span style="color:#6F42C1;">indexOf</span><span style="color:#24292E;">(stopTag)</span><span style="color:#D73A49;">!==</span><span style="color:#005CC5;">0</span><span style="color:#D73A49;">&amp;&amp;!</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">eos</span><span style="color:#24292E;">()){</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.pos</span><span style="color:#D73A49;">++</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">//改变为尾巴开头不是stopTag的时候,就说明还没有扫描到stopTag</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.tail</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.templateStr.</span><span style="color:#6F42C1;">substring</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.pos)</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// debugger</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.templateStr.</span><span style="color:#6F42C1;">substring</span><span style="color:#24292E;">(pos_backup,</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.pos)</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//指针是否已经到头,返回布尔值</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">eos</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.pos</span><span style="color:#D73A49;">&gt;=</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.templateStr.</span><span style="color:#005CC5;">length</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="构建成tokens-nesttokens" tabindex="-1">构建成tokens (nestTokens) <a class="header-anchor" href="#构建成tokens-nesttokens" aria-label="Permalink to &quot;构建成tokens (nestTokens)&quot;">​</a></h3>`,6),e=[o];function t(c,r,E,y,i,F){return a(),n("div",null,e)}const d=s(l,[["render",t]]);export{C as __pageData,d as default};
