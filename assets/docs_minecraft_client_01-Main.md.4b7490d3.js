import{_ as e,o as t,c as a,Q as o}from"./chunks/framework.82dd189e.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/minecraft/client/01-Main.md","filePath":"docs/minecraft/client/01-Main.md"}'),r={name:"docs/minecraft/client/01-Main.md"},n=o('<h3 id="注解详解" tabindex="-1">注解详解 <a class="header-anchor" href="#注解详解" aria-label="Permalink to &quot;注解详解&quot;">​</a></h3><p>@DontObfuscate</p><p>注解 DontObfuscate 主要的用途是在混淆过程中防止对特定代码的混淆。混淆是一个在软件发布时常见的步骤，它通过改变代码的结构和名称，使得代码更难阅读和理解，以此提高代码的安全性。</p><p>在 Minecraft 的源码中，DontObfuscate 可能被用于标记那些不应该被混淆的类或方法，比如某些重要的核心代码，或者某些需要保持其原始名称和结构以供其他代码引用的代码。</p><p>具体来说，当混淆工具（如 ProGuard）在混淆代码时，它会检查每个类和方法是否被 DontObfuscate 标记。如果一个类或方法被 DontObfuscate 标记，那么混淆工具就不会修改这个类或方法的名称或结构。</p><p>然而，这个注解的具体效果可能会根据混淆工具的具体实现和配置而有所不同。在某些情况下，混淆工具可能会完全忽略这个注解，或者只部分遵循这个注解。因此，理解和使用这个注解需要对混淆工具的工作方式有一定的了解。</p><h3 id="stream流" tabindex="-1">Stream流 <a class="header-anchor" href="#stream流" aria-label="Permalink to &quot;Stream流&quot;">​</a></h3><h3 id="joptsimple-解析命令行" tabindex="-1">joptsimple 解析命令行 <a class="header-anchor" href="#joptsimple-解析命令行" aria-label="Permalink to &quot;joptsimple 解析命令行&quot;">​</a></h3><p>optionparser.accepts(&quot;server&quot;).withRequiredArg() 注册命令行参数</p>',9),s=[n];function i(c,p,l,_,d,m){return t(),a("div",null,s)}const u=e(r,[["render",i]]);export{f as __pageData,u as default};
