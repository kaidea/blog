import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.82dd189e.js";const p="/blog/assets/image-20200420144502479.4bf60f2c.png",e="/blog/assets/image-20200420144547573.130711c4.png",o="/blog/assets/image-20200420144753489.d602868e.png",t="/blog/assets/image-20200420150430861.cd0a1da2.png",r="/blog/assets/image-20200420150706971.7c4ce879.png",c="/blog/assets/image-20200420151530353.31e00908.png",i="/blog/assets/image-20200420153507407.3d734b37.png",y="/blog/assets/image-20200420154327421.c67329b2.png",E="/blog/assets/image-20200420155138490.e82ce702.png",d="/blog/assets/image-20200420155800055.ed6626cf.png",g="/blog/assets/image-20200420145754762.79562ccf.png",h="/blog/assets/image-20200420161610020.16783f9b.png",m="/blog/assets/image-20200420164929269.55141f0c.png",F="/blog/assets/image-20200420165607140.c5569d20.png",b="/blog/assets/image-20200420165843624.2ba564ca.png",u="/blog/assets/image-20200420170307269.51575812.png",f="/blog/assets/image-20200420170552242.2b8447bb.png",C="/blog/assets/image-20200420171010353.db5f69d4.png",x="/blog/assets/image-20200420171251942.b0fa1a23.png",_="/blog/assets/image-20200420171323263.1ee9bee0.png",B="/blog/assets/image-20200420172051361.a85e0e3c.png",q="/blog/assets/image-20200420175106439.2aaac52f.png",k="/blog/assets/image-20200420175226086.a204049b.png",v="/blog/assets/image-20200420180044756.f444515f.png",A="/blog/assets/image-20200420180604159.0ca37381.png",P="/blog/assets/image-20200420181026280.4b5db086.png",H=JSON.parse('{"title":"React Native","description":"","frontmatter":{},"headers":[],"relativePath":"docs/reactNative/index.md","filePath":"docs/reactNative/index.md"}'),S={name:"docs/reactNative/index.md"},w=l(`<h1 id="react-native" tabindex="-1">React Native <a class="header-anchor" href="#react-native" aria-label="Permalink to &quot;React Native&quot;">​</a></h1><p>React 框架可以开发 WEB ，也可以开发手机 APP，React Native 就是开发手机 APP 技术。</p><h2 id="移动端开发介绍" tabindex="-1">移动端开发介绍 <a class="header-anchor" href="#移动端开发介绍" aria-label="Permalink to &quot;移动端开发介绍&quot;">​</a></h2><p>开发手机APP的方法：</p><ol><li>原生开发：需要使用 IOS需要object-c ，Anroid 需要Java</li><li>混合开发：使用 html、css、JS 进行开发，然后打包成手机 APP，比如：uniapp、phonegap等</li><li>React Natve：使用 HTML 、CSS 、JS 来写代码，编译成原生的APP。</li></ol><h2 id="搭建运行环境" tabindex="-1">搭建运行环境 <a class="header-anchor" href="#搭建运行环境" aria-label="Permalink to &quot;搭建运行环境&quot;">​</a></h2><p>相关软件下载地址：</p><p>JDK1.8链接：<a href="https://pan.baidu.com/s/1ueTfaZkpvhBJjCtsbg-gVQ" target="_blank" rel="noreferrer">https://pan.baidu.com/s/1ueTfaZkpvhBJjCtsbg-gVQ</a> 提取码：snjc</p><p>Android Studio 下载地址：从此下载：<a href="https://developer.android.google.cn/studio#downloads" target="_blank" rel="noreferrer">https://developer.android.google.cn/studio#downloads</a></p><p>python2 下载地址：<a href="https://www.python.org/ftp/python/2.7.17/python-2.7.17.amd64.msi" target="_blank" rel="noreferrer">https://www.python.org/ftp/python/2.7.17/python-2.7.17.amd64.msi</a></p><p>下载并按着官方文档的步骤安装。</p><p>安装完之后可以启动一个虚拟机：</p><h1 id="创建项目" tabindex="-1">创建项目 <a class="header-anchor" href="#创建项目" aria-label="Permalink to &quot;创建项目&quot;">​</a></h1><pre><code>npx react-native init 项目名称
</code></pre><p>创建完之后，启动项目：</p><pre><code>yarn android      --&gt; 安装到 android 虚拟机并运行
yarn ios          --&gt; 安装 ios 虚拟机上（必须要苹果电脑上）
</code></pre><p>安装完项目之后，其中 App.js 就是根组件，我们启动之后看到的页面就是 App.js 这个文件中的内容</p><p><img src="`+p+'" alt="image-20200420144502479"></p><p>App.js中的内容：</p><p><img src="'+e+'" alt="image-20200420144547573"></p><p>修改 App.js</p><p>第一个页面：Hello World</p><p><img src="'+o+'" alt="image-20200420144753489"></p><h1 id="快速入门" tabindex="-1">快速入门 <a class="header-anchor" href="#快速入门" aria-label="Permalink to &quot;快速入门&quot;">​</a></h1><h2 id="组件" tabindex="-1">组件 <a class="header-anchor" href="#组件" aria-label="Permalink to &quot;组件&quot;">​</a></h2><p>在 RN 里面并没有 HTML 标签。必须要使用 RN 中的组件来实现功能。</p><p>RN 中的组件分为：</p><ol><li>RN 中内置的组件（比如 View、Text 等）</li><li>社区开源组件：<a href="https://reactnative.directory/" target="_blank" rel="noreferrer">https://reactnative.directory/</a></li></ol><h2 id="基础组件" tabindex="-1">基础组件 <a class="header-anchor" href="#基础组件" aria-label="Permalink to &quot;基础组件&quot;">​</a></h2><p>RN 中最常使用的组件：</p><p>View：类似于 HTML 中的 div 标签，主要是用来实现布局。</p><p>Text：所有的文本内容必须要写在 Text 组件中。</p><p>Image：显示图片适当于 img</p><p>FlatView：制作长的数据列表等等。</p><p><img src="'+t+'" alt="image-20200420150430861"></p><h3 id="text-组件" tabindex="-1">Text 组件 <a class="header-anchor" href="#text-组件" aria-label="Permalink to &quot;Text 组件&quot;">​</a></h3><p>所有的文本内容必须要写在 Text 组件中</p><p><img src="'+r+'" alt="image-20200420150706971"></p><h3 id="view-组件" tabindex="-1">View 组件 <a class="header-anchor" href="#view-组件" aria-label="Permalink to &quot;View 组件&quot;">​</a></h3><p>主要用来布局。</p><p>示例、实现9宫格。</p><p><img src="'+c+'" alt="image-20200420151530353"></p><h3 id="image" tabindex="-1">Image <a class="header-anchor" href="#image" aria-label="Permalink to &quot;Image&quot;">​</a></h3><p><img src="'+i+'" alt="image-20200420153507407"></p><p>默认情况下 gif 动图无法正常显示，需要：</p><p><img src="'+y+'" alt="image-20200420154327421"></p><p>添加之后需要重新关闭命令行，重新执行 <code>yarn android</code> 重新打包一下。</p><h2 id="社区组件" tabindex="-1">社区组件 <a class="header-anchor" href="#社区组件" aria-label="Permalink to &quot;社区组件&quot;">​</a></h2><h3 id="轮播图" tabindex="-1">轮播图 <a class="header-anchor" href="#轮播图" aria-label="Permalink to &quot;轮播图&quot;">​</a></h3><ol><li>先找一个组件</li></ol><p><img src="'+E+`" alt="image-20200420155138490"></p><ol start="2"><li>查看文档<a href="https://github.com/leecade/react-native-swiper" target="_blank" rel="noreferrer">https://github.com/leecade/react-native-swiper</a></li><li>安装</li></ol><pre><code>npm i react-native-swiper --save
</code></pre><ol start="4"><li>写代码</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> React </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;react&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { View, Image, Text, StyleSheet } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;react-native&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> Swiper </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;react-native-swiper&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">App</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> &lt;</span><span style="color:#79B8FF;">Swiper</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">style</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{styles.wrapper} </span><span style="color:#B392F0;">horizontal</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{</span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">} </span><span style="color:#B392F0;">autoplay</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">}&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#79B8FF;">View</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">style</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{styles.slide1}&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      &lt;</span><span style="color:#79B8FF;">Text</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">style</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{styles.text}&gt;Hello Swiper&lt;/</span><span style="color:#79B8FF;">Text</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#79B8FF;">View</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#79B8FF;">View</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">style</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{styles.slide2}&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      &lt;</span><span style="color:#79B8FF;">Text</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">style</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{styles.text}&gt;Beautiful&lt;/</span><span style="color:#79B8FF;">Text</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#79B8FF;">View</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#79B8FF;">View</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">style</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{styles.slide3}&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      &lt;</span><span style="color:#79B8FF;">Text</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">style</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{styles.text}&gt;And simple&lt;/</span><span style="color:#79B8FF;">Text</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#79B8FF;">View</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;/</span><span style="color:#79B8FF;">Swiper</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> App</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">styles</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> StyleSheet.</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  wrapper: {},</span></span>
<span class="line"><span style="color:#E1E4E8;">  slide1: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    flex: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    justifyContent: </span><span style="color:#9ECBFF;">&#39;center&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    alignItems: </span><span style="color:#9ECBFF;">&#39;center&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    backgroundColor: </span><span style="color:#9ECBFF;">&#39;#9DD6EB&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  slide2: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    flex: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    justifyContent: </span><span style="color:#9ECBFF;">&#39;center&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    alignItems: </span><span style="color:#9ECBFF;">&#39;center&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    backgroundColor: </span><span style="color:#9ECBFF;">&#39;#97CAE5&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  slide3: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    flex: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    justifyContent: </span><span style="color:#9ECBFF;">&#39;center&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    alignItems: </span><span style="color:#9ECBFF;">&#39;center&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    backgroundColor: </span><span style="color:#9ECBFF;">&#39;#92BBD9&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  text: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    color: </span><span style="color:#9ECBFF;">&#39;#fff&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    fontSize: </span><span style="color:#79B8FF;">30</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    fontWeight: </span><span style="color:#9ECBFF;">&#39;bold&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> React </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;react&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { View, Image, Text, StyleSheet } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;react-native&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Swiper </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;react-native-swiper&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">App</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> &lt;</span><span style="color:#005CC5;">Swiper</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">style</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{styles.wrapper} </span><span style="color:#6F42C1;">horizontal</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{</span><span style="color:#005CC5;">false</span><span style="color:#24292E;">} </span><span style="color:#6F42C1;">autoplay</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">}&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#005CC5;">View</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">style</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{styles.slide1}&gt;</span></span>
<span class="line"><span style="color:#24292E;">      &lt;</span><span style="color:#005CC5;">Text</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">style</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{styles.text}&gt;Hello Swiper&lt;/</span><span style="color:#005CC5;">Text</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#005CC5;">View</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#005CC5;">View</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">style</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{styles.slide2}&gt;</span></span>
<span class="line"><span style="color:#24292E;">      &lt;</span><span style="color:#005CC5;">Text</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">style</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{styles.text}&gt;Beautiful&lt;/</span><span style="color:#005CC5;">Text</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#005CC5;">View</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#005CC5;">View</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">style</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{styles.slide3}&gt;</span></span>
<span class="line"><span style="color:#24292E;">      &lt;</span><span style="color:#005CC5;">Text</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">style</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{styles.text}&gt;And simple&lt;/</span><span style="color:#005CC5;">Text</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#005CC5;">View</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#005CC5;">Swiper</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> App</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">styles</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> StyleSheet.</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  wrapper: {},</span></span>
<span class="line"><span style="color:#24292E;">  slide1: {</span></span>
<span class="line"><span style="color:#24292E;">    flex: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    justifyContent: </span><span style="color:#032F62;">&#39;center&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    alignItems: </span><span style="color:#032F62;">&#39;center&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    backgroundColor: </span><span style="color:#032F62;">&#39;#9DD6EB&#39;</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  slide2: {</span></span>
<span class="line"><span style="color:#24292E;">    flex: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    justifyContent: </span><span style="color:#032F62;">&#39;center&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    alignItems: </span><span style="color:#032F62;">&#39;center&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    backgroundColor: </span><span style="color:#032F62;">&#39;#97CAE5&#39;</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  slide3: {</span></span>
<span class="line"><span style="color:#24292E;">    flex: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    justifyContent: </span><span style="color:#032F62;">&#39;center&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    alignItems: </span><span style="color:#032F62;">&#39;center&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    backgroundColor: </span><span style="color:#032F62;">&#39;#92BBD9&#39;</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  text: {</span></span>
<span class="line"><span style="color:#24292E;">    color: </span><span style="color:#032F62;">&#39;#fff&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    fontSize: </span><span style="color:#005CC5;">30</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    fontWeight: </span><span style="color:#032F62;">&#39;bold&#39;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p>效果：</p><img src="`+d+'" alt="image-20200420155800055" style="zoom:50%;"><h2 id="样式" tabindex="-1">样式 <a class="header-anchor" href="#样式" aria-label="Permalink to &quot;样式&quot;">​</a></h2><p>在 RN 中不能直接编写 CSS 样式，必须要把 CSS 写成 JS 的对象来使用。</p><p>设置样式有两种方式：</p><ol><li>在组件上直接使用 styles 属性</li><li>使用 <code>StyleSheet</code> 来创建统一管理的样式</li></ol><p>示例演示：在 RN 中两种应用样式的方法：</p><p><img src="'+g+'" alt="image-20200420145754762"></p><p>注意：</p><ol><li>数字值时一般不需要添加单位</li><li>在RN中很多WEB中的CSS 是不好使的，比如：float。</li><li>在 RN 中一般使用 flex 进行布局。</li><li>RN 中的 CSS 都要写成一个 JS 对象</li><li>名称必须是小骆峰方式来写，比如 background-color 到RN就是:backgroundColor</li></ol><h1 id="网络" tabindex="-1">网络 <a class="header-anchor" href="#网络" aria-label="Permalink to &quot;网络&quot;">​</a></h1><p>实际开发 APP 时肯定需要调用接口，在 RN 中调用接口有三种方式：</p><ol><li>自带-原生的 AJAX（XMLHttpRequest）</li><li>自带-使用 fetch 方法</li><li>第三方的包：axios</li></ol><p>示例、使用 <code>fetch</code> 调用商品接口制作商品列表功能</p><p><img src="'+h+'" alt="image-20200420161610020"></p><h1 id="flatlist-组件" tabindex="-1">FlatList 组件 <a class="header-anchor" href="#flatlist-组件" aria-label="Permalink to &quot;FlatList 组件&quot;">​</a></h1><p>当我们需要制作一个长数据列表、可以滚动的列表时可以使用 <code>FlatList</code> 组件。</p><p><img src="'+m+'" alt="image-20200420164929269"></p><h1 id="button-组件" tabindex="-1">Button 组件 <a class="header-anchor" href="#button-组件" aria-label="Permalink to &quot;Button 组件&quot;">​</a></h1><p><img src="'+F+'" alt="image-20200420165607140"></p><h1 id="icon-图标" tabindex="-1">Icon 图标 <a class="header-anchor" href="#icon-图标" aria-label="Permalink to &quot;Icon 图标&quot;">​</a></h1><p>我们在开发时经常需要使用一些图标。</p><p>在 RN 中使用图标时，我们可以找一下开源的仓库中查找。</p><p><img src="'+b+`" alt="image-20200420165843624"></p><ol><li>安装</li></ol><pre><code>npm install --save react-native-vector-icons
</code></pre><ol start="2"><li>配置</li></ol><p>在 Android 系统中要使用图标需要配置。</p><p>修改 <code>android/app/build.gradle</code> 文件，添加一行到最后：</p><pre><code>apply from: &quot;../../node_modules/react-native-vector-icons/fonts.gradle&quot;
</code></pre><ol start="3"><li>选择要使用的图片类</li></ol><p>图标查看地址：<a href="https://oblador.github.io/react-native-vector-icons/" target="_blank" rel="noreferrer">https://oblador.github.io/react-native-vector-icons/</a></p><p><img src="`+u+`" alt="image-20200420170307269"></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> Icon </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;react-native-vector-icons/Feather&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">Icon</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;aperture&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">size</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{</span><span style="color:#79B8FF;">30</span><span style="color:#E1E4E8;">} </span><span style="color:#B392F0;">color</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;#900&quot;</span><span style="color:#E1E4E8;"> /&gt;;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Icon </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;react-native-vector-icons/Feather&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">Icon</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;aperture&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">size</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{</span><span style="color:#005CC5;">30</span><span style="color:#24292E;">} </span><span style="color:#6F42C1;">color</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;#900&quot;</span><span style="color:#24292E;"> /&gt;;</span></span></code></pre></div><ol start="4"><li>重新打包项目</li></ol><p><img src="`+f+'" alt="image-20200420170552242"></p><h1 id="statusbar" tabindex="-1">StatusBar <a class="header-anchor" href="#statusbar" aria-label="Permalink to &quot;StatusBar&quot;">​</a></h1><p>可以通过这个组件设置手机应用状态栏。</p><p><img src="'+C+'" alt="image-20200420171010353"></p><p>除了可以直接使用组件之外，组件还提供了些静态方法：</p><p><img src="'+x+'" alt="image-20200420171251942"></p><p>然后我们可以通过调用这些方法来实现功能：</p><p><img src="'+_+'" alt="image-20200420171323263"></p><h1 id="判断手机平台" tabindex="-1">判断手机平台 <a class="header-anchor" href="#判断手机平台" aria-label="Permalink to &quot;判断手机平台&quot;">​</a></h1><p>在不同的手机系统上，有些组件和API用法不同。</p><p>比如 AlertIOS 组件只能在苹果手机上运行。</p><p>所以在不同的手机 上同一个功能代码可能不一样，所以我们在写代码时就要根据平台来编写不同的代码。</p><p>那么我们如何判断当前手机运行在哪个平台上？</p><p>可以使用 <code>Platform</code> 来判断当前的平台。</p><p><img src="'+B+'" alt="image-20200420172051361"></p><h1 id="flex-布局要注意的地方" tabindex="-1">Flex 布局要注意的地方 <a class="header-anchor" href="#flex-布局要注意的地方" aria-label="Permalink to &quot;Flex 布局要注意的地方&quot;">​</a></h1><h2 id="使用-flex" tabindex="-1">使用 flex <a class="header-anchor" href="#使用-flex" aria-label="Permalink to &quot;使用 flex&quot;">​</a></h2><p>直接 <code>flex: 1</code> 即可。</p><h2 id="flex-布局时的高度" tabindex="-1">flex 布局时的高度 <a class="header-anchor" href="#flex-布局时的高度" aria-label="Permalink to &quot;flex 布局时的高度&quot;">​</a></h2><ol><li>当开启 flex 布局，高度就是父元素的高度</li><li>如果最顶层元素开启了 flex 布局，高度就是 100%</li></ol><h2 id="flex-后面的数字代表比例" tabindex="-1">flex 后面的数字代表比例 <a class="header-anchor" href="#flex-后面的数字代表比例" aria-label="Permalink to &quot;flex 后面的数字代表比例&quot;">​</a></h2><p><img src="'+q+'" alt="image-20200420175106439"></p><h2 id="flex-默认是垂直的" tabindex="-1">flex 默认是垂直的 <a class="header-anchor" href="#flex-默认是垂直的" aria-label="Permalink to &quot;flex 默认是垂直的&quot;">​</a></h2><p>在网页中 flex 布局默认是水平排列的，但是 RN 中默认是垂直排序的。</p><p>如果要水平排列可以使用 <code>flexDirection: &#39;row&#39;</code>。</p><p><img src="'+k+'" alt="image-20200420175226086"></p><h2 id="rn-中的定位" tabindex="-1">rn 中的定位 <a class="header-anchor" href="#rn-中的定位" aria-label="Permalink to &quot;rn 中的定位&quot;">​</a></h2><p>在网页中定位有四种，但是在 RN 只有两种：absolute，relative。</p><p>absolute 在网页中是相对于窗口定位，而在 RN 中是相对于父元素定位。</p><h2 id="盒子居中" tabindex="-1">盒子居中 <a class="header-anchor" href="#盒子居中" aria-label="Permalink to &quot;盒子居中&quot;">​</a></h2><p>在网页中直接 <code>margin: 0 auto</code> 即可，但是在 RN 中要分开写，否则会导致APP退出：</p><p><img src="'+v+'" alt="image-20200420180044756"></p><h2 id="css-3中的动画、过滤不能使用了" tabindex="-1">CSS 3中的动画、过滤不能使用了~ <a class="header-anchor" href="#css-3中的动画、过滤不能使用了" aria-label="Permalink to &quot;CSS 3中的动画、过滤不能使用了~&quot;">​</a></h2><h2 id="背景图" tabindex="-1">背景图 <a class="header-anchor" href="#背景图" aria-label="Permalink to &quot;背景图&quot;">​</a></h2><p>在 RN 中不能使用 <code>background-image</code> 来设置背景图。不过，可以使用一个 <code>ImageBackground</code> 的组件来实现背景图功能。</p><p><img src="'+A+'" alt="image-20200420180604159"></p><h2 id="获取屏幕尺寸" tabindex="-1">获取屏幕尺寸 <a class="header-anchor" href="#获取屏幕尺寸" aria-label="Permalink to &quot;获取屏幕尺寸&quot;">​</a></h2><p>有些时候，我们需要知道手机屏幕的宽、高。</p><p>要吧通过 <code>Dimensions</code> 组件获取屏幕的宽、高。</p><p><img src="'+P+'" alt="image-20200420181026280"></p>',130),D=[w];function T(N,R,V,I,j,J){return a(),n("div",null,D)}const L=s(S,[["render",T]]);export{H as __pageData,L as default};
