import{_ as s,o as a,c as l,Q as n}from"./chunks/framework.82dd189e.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/java/01-Optional.md","filePath":"docs/java/01-Optional.md"}'),p={name:"docs/java/01-Optional.md"},o=n(`<h3 id="optional" tabindex="-1">Optional <a class="header-anchor" href="#optional" aria-label="Permalink to &quot;Optional&quot;">â€‹</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DataResult</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">R</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#F97583;">implements</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">App</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">DataResult</span><span style="color:#E1E4E8;">.</span><span style="color:#F97583;">Mu</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">R</span><span style="color:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> &lt;</span><span style="color:#F97583;">K</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">V</span><span style="color:#E1E4E8;">&gt; Function&lt;</span><span style="color:#F97583;">K</span><span style="color:#E1E4E8;">, DataResult&lt;</span><span style="color:#F97583;">V</span><span style="color:#E1E4E8;">&gt;&gt; </span><span style="color:#B392F0;">partialGet</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> Function&lt;</span><span style="color:#F97583;">K</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">V</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">partialGet</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> Supplier&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">errorPrefix</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> name </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> Optional.</span><span style="color:#B392F0;">ofNullable</span><span style="color:#E1E4E8;">(partialGet.</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(name)).</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">(DataResult</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">success).</span><span style="color:#B392F0;">orElseGet</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;">(errorPrefix.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> name));</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">DataResult</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">R</span><span style="color:#24292E;">&gt; </span><span style="color:#D73A49;">implements</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">App</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">DataResult</span><span style="color:#24292E;">.</span><span style="color:#D73A49;">Mu</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">R</span><span style="color:#24292E;">&gt; {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> &lt;</span><span style="color:#D73A49;">K</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">V</span><span style="color:#24292E;">&gt; Function&lt;</span><span style="color:#D73A49;">K</span><span style="color:#24292E;">, DataResult&lt;</span><span style="color:#D73A49;">V</span><span style="color:#24292E;">&gt;&gt; </span><span style="color:#6F42C1;">partialGet</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> Function&lt;</span><span style="color:#D73A49;">K</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">V</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">partialGet</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> Supplier&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">errorPrefix</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> name </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> Optional.</span><span style="color:#6F42C1;">ofNullable</span><span style="color:#24292E;">(partialGet.</span><span style="color:#6F42C1;">apply</span><span style="color:#24292E;">(name)).</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">(DataResult</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">success).</span><span style="color:#6F42C1;">orElseGet</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">error</span><span style="color:#24292E;">(errorPrefix.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> name));</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"></span></code></pre></div>`,3),t=[o];function e(c,r,E,y,i,F){return a(),l("div",null,t)}const g=s(p,[["render",e]]);export{u as __pageData,g as default};
